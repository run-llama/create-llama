name: Build Package

on:
  pull_request:

env:
  PYTHON_VERSION: "3.9"
  UI_TEST: "true"

jobs:
  prepare-ui:
    name: Prepare Frontend Assets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install frontend dependencies
        working-directory: packages/server
        run: pnpm install

      - name: Build frontend statics
        working-directory: packages/server
        run: pnpm build

      - name: Upload frontend statics
        uses: actions/upload-artifact@v4
        with:
          name: frontend-statics
          path: packages/server/dist/static/
          if-no-files-found: error

  unit-test:
    name: Unit Tests
    needs: [prepare-ui]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: python/llama-index-server
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v4

      - name: Download frontend statics
        run: |
          echo "Downloading frontend statics from run ${{ github.run_id }}"
          gh run download ${{ github.run_id }} --name frontend-statics -D llama_index/server/static_ui
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        shell: bash
        run: uv sync --all-extras --dev

      - name: Run unit tests
        shell: bash
        run: uv run pytest tests

  type-check:
    name: Type Check
    needs: [prepare-ui]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python/llama-index-server
    steps:
      - uses: actions/checkout@v4

      - name: Download frontend statics
        run: |
          echo "Downloading frontend statics from run ${{ github.run_id }}"
          gh run download ${{ github.run_id }} --name frontend-statics -D llama_index/server/static_ui
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        shell: bash
        run: uv sync --all-extras --dev

      - name: Run mypy
        shell: bash
        run: uv run mypy llama_index

  build:
    needs: [unit-test, type-check, prepare-ui]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python/llama-index-server
    steps:
      - uses: actions/checkout@v4

      - name: Download frontend statics
        run: |
          echo "Downloading frontend statics from run ${{ github.run_id }}"
          gh run download ${{ github.run_id }} --name frontend-statics -D llama_index/server/static_ui
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install build package
        shell: bash
        run: uv sync --all-extras

      - name: Test import
        shell: bash
        run: uv run python -c "from llama_index.server import LlamaIndexServer"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: llama-index-server
          path: dist/

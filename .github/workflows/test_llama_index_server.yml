name: Build Package

on:
  pull_request:

env:
  PYTHON_VERSION: "3.9"

jobs:
  unit-test:
    name: Unit Tests
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: llama-index-server
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        shell: bash
        run: uv sync --all-extras --dev

      - name: Run unit tests
        shell: bash
        run: uv run pytest tests

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: llama-index-server
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        shell: bash
        run: uv sync --all-extras --dev

      - name: Run mypy
        shell: bash
        run: uv run mypy llama_index

  build:
    needs: [unit-test, type-check]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: llama-index-server
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install build package
        shell: bash
        run: uv sync --all-extras --dev

      - name: Build package
        shell: bash
        run: uv run python -m build

      - name: Test installing built package
        shell: bash
        run: uv pip install .

      - name: Test import
        shell: bash
        working-directory: ${{ vars.RUNNER_TEMP }}
        run: uv run python -c "from llama_index.server import LlamaIndexServer"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: llama-index-server
          path: llama-index-server/dist/
